/*
 * Copyright 2015 Mark Michaelis
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
group 'com.github.mmichaelis'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

/* source/target: Do not use constants from JavaVersion; IntelliJ Idea does not support this */
/* define the valid syntax level for source files */
sourceCompatibility = JavaVersion.VERSION_1_7
/* define binary compatibility version */
targetCompatibility = JavaVersion.VERSION_1_7

def deployUsername = System.getenv("SONATYPE_USERNAME") ?: sonatypeUsername
def deployPassword = System.getenv("SONATYPE_PASSWORD") ?: sonatypePassword

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

compileJava.doFirst {
  /* trying to debug https://github.com/mmichaelis/hamcrest-nextdeed/issues/1 */
  logger.info("Source compatibility {}", sourceCompatibility)
  logger.info("Target compatibility {}", targetCompatibility)
}

//set build variables based on build type (release, continuous integration, development)
if (hasProperty("release")) {
  logger.info("Release Build enabled. Deployment (uploadArtifacts) will go to Sonatype Staging.")
  isReleaseBuild = true
  sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
  logger.info("CI Build enabled. Deployment (uploadArtifacts) will go to Sonatype Snapshots.")
  isCiBuild = true
  version += "-SNAPSHOT"
  sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
  logger.info("Development build enabled. Deployment (uploadArtifacts) will go to local maven repository.")
  isDevBuild = true
}

repositories {
  mavenCentral()
}

dependencies {
  compile(
      [group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'],
      [group: 'org.jetbrains', name: 'annotations', version: '13.0']
  )
  testCompile(
      [group: 'junit', name: 'junit', version: '4.12', transitive: false],
      [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.10']
  )
  testRuntime(
      [group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2']
  )
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Hamcrest - Next Deed',
               'Implementation-Vendor': 'Mark Michaelis',
               'Implementation-Version': version
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar

  archives javadocJar
  archives sourcesJar
}

if (isReleaseBuild) {
  signing {
    sign configurations.archives
  }
} else {
  task signArchives {
    logger.info("Signing skipped as release build not triggered.")
    // do nothing
  }
}

uploadArchives {
  repositories {
    if (isDevBuild) {
      mavenLocal()
    } else {
      mavenDeployer {
        beforeDeployment {
          MavenDeployment deployment -> signing.signPom(deployment)
        }
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: deployUsername, password: deployPassword)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: deployUsername, password: deployPassword)
        }
        pom.project {
          name project.name
          packaging 'jar'
          description 'Hamcrest - Next Deed is an extension to Hamcrest matchers.'
          url 'https://github.com/mmichaelis/hamcrest-nextdeed'
          scm {
            url 'https://github.com/mmichaelis/hamcrest-nextdeed'
            connection 'git@github.com:mmichaelis/hamcrest-nextdeed.git'
            developerConnection 'git@github.com:mmichaelis/hamcrest-nextdeed.git'
          }
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }
          developers {
            developer {
              id 'mmichaelis'
              name 'Mark Michaelis'
            }
            developer {
              id 'okummer'
              name 'Olaf Kummer'
            }
          }
        }
      }
    }
  }
}

task wrapper(type: Wrapper) {
  group = 'Buildmaster'
  description = 'Generates gradlew and gradlew.bat bootstrap scripts'
  gradleVersion = '2.4'
}
