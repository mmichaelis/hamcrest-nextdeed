/*
 * Copyright 2015 Mark Michaelis
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

defaultTasks 'clean', 'check'

repositories {
  jcenter()
  mavenCentral()
}

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    // Axion Release Plugin: https://github.com/allegro/axion-release-plugin
    classpath group: 'pl.allegro.tech.build', name: 'axion-release-plugin', version: '1.2.3'
    // gradle-git plugin to manage github pages
    classpath group: 'org.ajoberstar', name: 'gradle-git', version: '1.2.0'
    // send coverage data to coveralls.io
    classpath group: 'org.kt3k.gradle.plugin', name: 'coveralls-gradle-plugin', version: '2.4.0'
  }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: "sonar-runner"
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'com.github.kt3k.coveralls'

project.group = 'com.github.mmichaelis'
project.description = 'Hamcrest - Next Deed is an extension to Hamcrest matchers.'

def isDeployLocal
def isDeploySnapshot
def isDeployRelease

def isCiBuild = System.getenv("CI_BUILD") ?: hasProperty("ci")

def sonatypeRepositoryUrl

if (!isCiBuild) {

  logger.info("Enabling axion-release-plugin.")

  apply plugin: 'pl.allegro.tech.build.axion-release'

  scmVersion {
    repository {
      customUsername = project.hasProperty('githubUsername') ? project.githubUsername : ''
      customPassword = project.hasProperty('githubPassword') ? project.githubPassword : ''
    }
    hooks {
      // replaces usages of e. g. @since SINCE by the new version number
      pre 'fileUpdate',
          [files: fileTree('src').include('**/*.java'), pattern: { v, p -> /SINCE/ }, replacement: {
            v, p -> "$v"
          }]
      pre 'commit', { v, p -> "Applying release version $v." }
    }
  }

  // Version determined by Axion Release Plugin
  project.version = scmVersion.version
} else {
  logger.info("CI Build. axion-release-plugin disabled. Falling back to default version")
  project.version = '0.1.0-ci-SNAPSHOT'
}

/* define the valid syntax level for source files */
sourceCompatibility = '1.7'
/* define binary compatibility version */
targetCompatibility = '1.7'

compileJava.doFirst {
  /* trying to debug https://github.com/mmichaelis/hamcrest-nextdeed/issues/1 */
  logger.info("Source compatibility {}", sourceCompatibility)
  logger.info("Target compatibility {}", targetCompatibility)
}

logger.info(
    "Determined Project information: " + project.group + ":" + project.name + ":" + project.version)

if (hasProperty("local")) {
  logger.info("Deployment (uploadArtifacts) will go to local maven repository.")
  isDeployLocal = true
} else if (project.version.toString().endsWith('SNAPSHOT')) {
  logger.info("Deployment (uploadArtifacts) will go to Sonatype Snapshots.")
  isDeploySnapshot = true
  sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
  logger.info("Release Build enabled. Deployment (uploadArtifacts) will go to Sonatype Staging.")
  isDeployRelease = true
  sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

dependencies {
  compile(
      [group: 'commons-configuration', name: 'commons-configuration', version: '1.10'],
      [group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'],
      [group: 'junit', name: 'junit', version: '4.12', transitive: false],
      [group: 'com.google.guava', name: 'guava', version: '18.0'],
      [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'],
      [group: 'org.jetbrains', name: 'annotations', version: '13.0'],
      // Sonar complains otherwise because some 3rd-party libs use this for NonNull and Nullable.
      [group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'],
  )
  testCompile(
      [group: 'com.google.jimfs', name: 'jimfs', version: '1.0'],
      [group: 'org.mockito', name: 'mockito-core', version: '1.10.19'],
      [group: 'com.twelvemonkeys.imageio', name: 'imageio-tiff', version: '3.1.2']
  )
  testRuntime(
      [group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3']
  )
}

// Task: sonarRunner
sonarRunner {
  sonarProperties {
    property "sonar.java.source", "1.7"
    property "sonar.java.target", "1.7"
  }
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Hamcrest - Next Deed',
        'Implementation-Vendor': 'Mark Michaelis',
        'Implementation-Version': version
  }
}

allprojects {
  tasks.withType(Javadoc) {
    options.footer '<em>Hamcrest &mdash; Next Deed</em> <a href="https://github.com/mmichaelis/hamcrest-nextdeed">@GitHub</a>'
    options.links 'http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/',
        'http://hamcrest.org/JavaHamcrest/javadoc/1.3/',
        'http://docs.oracle.com/javase/7/docs/api'
  }

  tasks.withType(Test) {
    systemProperty 'gradle.buildDir', "$buildDir"
    systemProperty 'gradle.logsDir', "$buildDir/logs"
    systemProperty 'gradle.testResultsDir', "$testResultsDir"
  }
}

processTestResources {
  from sourceSets.test.resources
  excludes = ['**/Thumbs.db']
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar

  archives javadocJar
  archives sourcesJar
}

if (isDeployRelease) {
  signing {
    sign configurations.archives
  }
} else {
  task signArchives {
    logger.info("Signing skipped as release build not triggered.")
    // do nothing
  }
}

uploadArchives {
  repositories {
    if (isDeployLocal) {
      mavenLocal()
    } else {
      mavenDeployer {
        beforeDeployment {
          MavenDeployment deployment -> signing.signPom(deployment)
        }
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
        pom.project {
          name project.name
          packaging 'jar'
          description project.description
          url 'https://github.com/mmichaelis/hamcrest-nextdeed'
          scm {
            url 'https://github.com/mmichaelis/hamcrest-nextdeed'
            connection 'git@github.com:mmichaelis/hamcrest-nextdeed.git'
            developerConnection 'git@github.com:mmichaelis/hamcrest-nextdeed.git'
          }
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }
          developers {
            developer {
              id 'mmichaelis'
              name 'Mark Michaelis'
            }
            developer {
              id 'okummer'
              name 'Olaf Kummer'
            }
          }
        }
      }
    }
  }
}

githubPages {
  repoUri = 'https://github.com/mmichaelis/hamcrest-nextdeed.git'
  credentials {
    username = project.hasProperty('githubUsername') ? project.githubUsername : ''
    password = project.hasProperty('githubPassword') ? project.githubPassword : ''
  }
  pages {
    from javadoc
  }
}

jacocoTestReport {
  reports {
    html.enabled = true
    xml.enabled = true
    csv.enabled = false
  }
}

publishGhPages {
  shouldRunAfter(tasks.uploadArchives)
}

task wrapper(type: Wrapper) {
  group = 'Buildmaster'
  description = 'Generates gradlew and gradlew.bat bootstrap scripts'
  gradleVersion = '2.4'
}
